import{R as P,r as p,j as A}from"./index-DKmHA7yz.js";const I=({performanceConfig:c,deviceCapabilities:f,courseSlug:T})=>{const y=p.useRef(null),g=p.useRef(null),r=p.useRef([]);p.useRef([]);const m=p.useRef([]),v=p.useRef({pulse:0}),i=p.useMemo(()=>({nodeCount:Math.min(c?.particleCount||25,12),nodeSpeed:c?.staticFallback?0:.5,maxConnections:Math.min(c?.particleCount||15,8),connectionDistance:150,dataFlowCount:Math.min(c?.particleCount||20,10),dataFlowSpeed:c?.staticFallback?0:2,networkPulseSpeed:c?.staticFallback?0:.04,colors:{primary:"#00D2D3",secondary:"#FF9F43",accent:"#54A0FF",node:"#00D2D3",connection:"#54A0FF40",dataFlow:"#FF9F43",pulse:"#00D2D3",glow:"#54A0FF",background:"#0A0E1A"}}),[c]);class S{constructor(t){this.canvas=t,this.x=Math.random()*t.width,this.y=Math.random()*t.height,this.vx=(Math.random()-.5)*i.nodeSpeed,this.vy=(Math.random()-.5)*i.nodeSpeed,this.size=8+Math.random()*12,this.opacity=.6+Math.random()*.4,this.pulse=Math.random()*Math.PI*2,this.pulseSpeed=.02+Math.random()*.03,this.activation=0,this.activationSpeed=.1+Math.random()*.1,this.type=Math.random()<.3?"input":Math.random()<.6?"hidden":"output",this.connections=[],this.lastActivation=0}update(){i.nodeSpeed!==0&&(this.x+=this.vx,this.y+=this.vy,(this.x<=this.size||this.x>=this.canvas.width-this.size)&&(this.vx*=-.9,this.x=Math.max(this.size,Math.min(this.canvas.width-this.size,this.x))),(this.y<=this.size||this.y>=this.canvas.height-this.size)&&(this.vy*=-.9,this.y=Math.max(this.size,Math.min(this.canvas.height-this.size,this.y))),this.pulse+=this.pulseSpeed,this.activation=Math.sin(this.pulse)*.5+.5,Math.random()<.02?this.lastActivation=1:this.lastActivation*=.95)}draw(t){t.save();const s=this.activation*this.opacity+this.lastActivation*.5;t.globalAlpha=s;let o=i.colors.node;this.type==="input"?o=i.colors.primary:this.type==="output"?o=i.colors.secondary:o=i.colors.accent,t.shadowColor=o,t.shadowBlur=this.size*2*s,t.fillStyle=o,t.beginPath(),t.arc(this.x,this.y,this.size,0,Math.PI*2),t.fill(),this.lastActivation>.1&&(t.save(),t.globalAlpha=this.lastActivation,t.strokeStyle=i.colors.glow,t.lineWidth=2,t.beginPath(),t.arc(this.x,this.y,this.size+4,0,Math.PI*2),t.stroke(),t.restore()),t.globalAlpha=1,t.fillStyle=i.colors.background,t.beginPath(),t.arc(this.x,this.y,this.size*.3,0,Math.PI*2),t.fill(),t.restore()}distanceTo(t){const s=this.x-t.x,o=this.y-t.y;return Math.sqrt(s*s+o*o)}}class k{constructor(t,s){this.startNode=t,this.endNode=s,this.progress=0,this.speed=i.dataFlowSpeed*(.5+Math.random()*.5),this.size=2+Math.random()*3,this.opacity=.8+Math.random()*.2,this.color=i.colors.dataFlow,this.life=1,this.decay=.01+Math.random()*.01}update(){i.dataFlowSpeed!==0&&(this.progress+=this.speed*.01,this.life-=this.decay,(this.progress>=1||this.life<=0)&&(this.progress=0,this.life=1,this.endNode&&(this.endNode.lastActivation=Math.min(1,this.endNode.lastActivation+.3))))}draw(t){if(!this.startNode||!this.endNode||this.life<=0)return;const s=this.startNode.x+(this.endNode.x-this.startNode.x)*this.progress,o=this.startNode.y+(this.endNode.y-this.startNode.y)*this.progress;t.save(),t.globalAlpha=this.opacity*this.life,t.shadowColor=this.color,t.shadowBlur=this.size*3,t.fillStyle=this.color,t.beginPath(),t.arc(s,o,this.size,0,Math.PI*2),t.fill();const a=5;for(let n=1;n<=a;n++){const l=Math.max(0,this.progress-n*.02);if(l<=0)break;const h=this.startNode.x+(this.endNode.x-this.startNode.x)*l,d=this.startNode.y+(this.endNode.y-this.startNode.y)*l,u=this.opacity*this.life*(1-n/a);t.save(),t.globalAlpha=u,t.fillStyle=this.color,t.beginPath(),t.arc(h,d,this.size*(1-n/a),0,Math.PI*2),t.fill(),t.restore()}t.restore()}}const N=e=>{e.save(),v.current.pulse+=i.networkPulseSpeed;const t=Math.sin(v.current.pulse)*.3+.7,s=r.current;for(let o=0;o<s.length;o++)for(let a=o+1;a<s.length;a++){const n=s[o].distanceTo(s[a]);if(n<i.connectionDistance){const l=(1-n/i.connectionDistance)*t,h=l*2,d=(s[o].lastActivation+s[a].lastActivation)/2,u=Math.max(l,d);e.globalAlpha=u,e.strokeStyle=i.colors.connection.replace("40",Math.floor(u*255).toString(16).padStart(2,"0")),e.lineWidth=h,e.beginPath(),e.moveTo(s[o].x,s[o].y),e.lineTo(s[a].x,s[a].y),e.stroke(),d>.3&&(e.save(),e.globalAlpha=d*.5,e.strokeStyle=i.colors.pulse,e.lineWidth=h+2,e.beginPath(),e.moveTo(s[o].x,s[o].y),e.lineTo(s[a].x,s[a].y),e.stroke(),e.restore())}}e.restore()},F=e=>{if(i.networkPulseSpeed===0)return;const t=30,s=30,o=200,a=120;e.save(),e.fillStyle=i.colors.background+"E6",e.fillRect(t,s,o,a),e.strokeStyle=i.colors.primary,e.lineWidth=2,e.strokeRect(t,s,o,a),e.font="bold 14px Arial",e.fillStyle=i.colors.primary,e.textAlign="left",e.fillText("Neural Network",t+10,s+20);const n=r.current.filter(z=>z.lastActivation>.1).length,l=r.current.length,h=l>0?(n/l*100).toFixed(1):0;e.font="12px Arial",e.fillStyle=i.colors.accent,e.fillText(`Nodes: ${l}`,t+10,s+40),e.fillText(`Active: ${n}`,t+10,s+55),e.fillText(`Activity: ${h}%`,t+10,s+70);const d=o-20,u=8,w=s+85;e.fillStyle=i.colors.background,e.fillRect(t+10,w,d,u),e.fillStyle=i.colors.secondary,e.fillRect(t+10,w,d*h/100,u),e.strokeStyle=i.colors.accent,e.lineWidth=1,e.strokeRect(t+10,w,d,u),e.font="10px Arial",e.fillStyle=i.colors.glow;const R=h>50?"Processing...":h>20?"Learning...":"Idle";e.fillText(R,t+10,s+110),e.restore()},b=e=>{r.current=[],m.current=[];for(let t=0;t<i.nodeCount;t++)r.current.push(new S(e));for(let t=0;t<i.dataFlowCount;t++){const s=Math.floor(Math.random()*r.current.length),o=Math.floor(Math.random()*r.current.length);s!==o&&m.current.push(new k(r.current[s],r.current[o]))}},M=()=>{const e=y.current;if(!e)return;const t=e.getContext("2d");t.clearRect(0,0,e.width,e.height),N(t),r.current.forEach(s=>{s.update(),s.draw(t)}),m.current.forEach(s=>{s.update(),s.draw(t)}),F(t),(i.nodeSpeed>0||i.dataFlowSpeed>0||i.networkPulseSpeed>0)&&(g.current=requestAnimationFrame(M))};return p.useEffect(()=>{const e=y.current;if(!e)return;const t=()=>{const s=e.getBoundingClientRect();e.width=s.width*(f?.pixelRatio||1),e.height=s.height*(f?.pixelRatio||1),e.getContext("2d").scale(f?.pixelRatio||1,f?.pixelRatio||1),b(e)};return t(),window.addEventListener("resize",t),M(),()=>{window.removeEventListener("resize",t),g.current&&cancelAnimationFrame(g.current)}},[i,f]),c?.staticFallback?A.jsx("div",{className:"absolute inset-0 opacity-10",style:{background:`linear-gradient(135deg, ${i.colors.primary} 0%, ${i.colors.secondary} 50%, ${i.colors.accent} 100%)`}}):A.jsx("canvas",{ref:y,className:"absolute inset-0 w-full h-full pointer-events-none",style:{background:"transparent",mixBlendMode:"multiply"},"aria-hidden":"true"})},E=P.memo(I);export{E as default};
